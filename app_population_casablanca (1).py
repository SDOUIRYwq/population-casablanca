
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
import matplotlib.pyplot as plt

# ---------------------------
# Donn√©es historiques
# ---------------------------
data = {
    'Ann√©e': [2004, 2014, 2024],
    'Population': [2949805, 3359818, 3019818]
}
df = pd.DataFrame(data)

# Pr√©traitement
scaler = MinMaxScaler(feature_range=(0, 1))
population_scaled = scaler.fit_transform(df['Population'].values.reshape(-1, 1))

# S√©quences pour LSTM
X = []
y = []
for i in range(len(population_scaled) - 1):
    X.append(population_scaled[i])
    y.append(population_scaled[i + 1])

X = np.array(X)
y = np.array(y)
X = X.reshape((X.shape[0], 1, 1))

# Mod√®le LSTM
model = Sequential()
model.add(LSTM(10, activation='relu', input_shape=(1, 1)))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')
model.fit(X, y, epochs=300, verbose=0)

# Interface Streamlit
st.title("üìä Pr√©diction de la population de Casablanca")

ann√©e_input = st.number_input("Choisissez l'ann√©e √† pr√©dire (>=2025)", min_value=2025, max_value=2050, step=1)

if st.button("Pr√©dire"):
    # Pr√©diction en cha√Æne jusqu'√† l'ann√©e demand√©e
    ann√©es_connues = df['Ann√©e'].tolist()
    populations_connues = df['Population'].tolist()

    dernier_point = population_scaled[-1].reshape((1, 1, 1))
    ann√©es_future = ann√©es_connues.copy()
    populations_future = populations_connues.copy()

    for ann√©e in range(2025, ann√©e_input + 1):
        prediction_scaled = model.predict(dernier_point)
        prediction_population = scaler.inverse_transform(prediction_scaled)[0][0]
        ann√©es_future.append(ann√©e)
        populations_future.append(prediction_population)
        dernier_point = prediction_scaled.reshape((1, 1, 1))

    st.success(f"üëâ Population pr√©dite pour {ann√©e_input} : {int(populations_future[-1]):,} habitants")

    # Affichage graphique
    fig, ax = plt.subplots()
    ax.plot(ann√©es_connues, populations_connues, marker='o', label='Donn√©es historiques')
    ax.plot(ann√©es_future, populations_future, marker='x', linestyle='--', color='red', label='Pr√©dictions')
    ax.set_xlabel('Ann√©e')
    ax.set_ylabel('Population')
    ax.set_title('Pr√©diction de la population de Casablanca')
    ax.legend()
    ax.grid(True)
    st.pyplot(fig)
